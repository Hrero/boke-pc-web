{"ast":null,"code":"import _defineProperty from \"/Users/app/code/boke-pc-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport indexState from '../store/index';\nimport postState from '../store/post';\nimport comState from '../store/com';\nimport infoState from '../store/info';\nvar allState = Object.assign(indexState, postState, comState, infoState);\nvar initialState = Object.keys(allState).map(function (key) {\n  return _defineProperty({}, key, allState[key]()['default']);\n}).reduce(function (sum, cur) {\n  return Object.assign(sum, cur, {});\n}); // 这里暴露出的是创建store的工厂方法\n// 每次渲染都需要重新创建一个store实例\n// 防止服务端一直复用旧实例 无法和客户端状态同步\n\nexport default function initializeStore(state) {\n  var store = createStore(function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n    var backState = null;\n    Object.keys(allState).forEach(function (item) {\n      var fn = allState[item](action);\n\n      if (action.type === fn['type']) {\n        backState = fn['data'];\n      }\n    });\n    return backState ? backState : state;\n  }, Object.assign({}, initialState, state), applyMiddleware(ReduxThunk));\n  return store;\n}","map":null,"metadata":{},"sourceType":"module"}