{"ast":null,"code":"import _Tree from \"antd/lib/tree\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/app/code/boke-pc-web/components/others/ArticleTrees.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport styles from '../../styles/articleTrees.module.scss';\nimport { isEmpty } from 'zgl-utils-js';\nimport React from 'react';\nconst {\n  DirectoryTree\n} = _Tree;\nexport default class ArticleTrees extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getItemChild\", item => {\n      return item.map(child => {\n        if (child.isLeaf) {\n          return {\n            title: child.name,\n            key: child.value\n          };\n        } else {\n          return {\n            title: child.name,\n            key: child.value,\n            children: this.getItemChild(child.children)\n          };\n        }\n      });\n    });\n\n    _defineProperty(this, \"updateTreeData\", (list, key, children) => {\n      return list.map(node => {\n        if (node.key === key) {\n          return _objectSpread(_objectSpread({}, node), {}, {\n            children\n          });\n        } else if (node.children) {\n          return _objectSpread(_objectSpread({}, node), {}, {\n            children: updateTreeData(node.children, key, children)\n          });\n        }\n\n        return node;\n      });\n    });\n\n    _defineProperty(this, \"onSelect\", (keys, event) => {\n      console.log('Trigger Select', keys, event);\n    });\n\n    _defineProperty(this, \"onExpand\", () => {\n      console.log('Trigger Expand');\n    });\n\n    this.state = {\n      com_class_list: !isEmpty(this.props.com_class_list) && this.props.com_class_list.map(item => {\n        if (item.isLeaf) {\n          return {\n            title: item.name,\n            key: item.value\n          };\n        } else {\n          return {\n            title: item.name,\n            key: item.value,\n            children: this.getItemChild(item.children)\n          };\n        }\n      })\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.trees,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.visitorTitle,\n        children: \"\\u5206\\u7C7B\\u5217\\u8868\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DirectoryTree, {\n        multiple: true,\n        onSelect: onSelect,\n        onExpand: onExpand,\n        treeData: com_classList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/app/code/boke-pc-web/components/others/ArticleTrees.js"],"names":["styles","isEmpty","React","DirectoryTree","ArticleTrees","Component","constructor","props","item","map","child","isLeaf","title","name","key","value","children","getItemChild","list","node","updateTreeData","keys","event","console","log","state","com_class_list","render","trees","visitorTitle","onSelect","onExpand","com_classList"],"mappings":"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","sourcesContent":["import styles from '../../styles/articleTrees.module.scss';\nimport { Tree } from 'antd';\nimport { isEmpty } from 'zgl-utils-js';\nimport React from 'react';\n\n\nconst { DirectoryTree } = Tree;\n\nexport default class ArticleTrees extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            com_class_list: !isEmpty(this.props.com_class_list) && this.props.com_class_list.map(item => {\n                if (item.isLeaf) {\n                    return {\n                        title: item.name,\n                        key: item.value\n                    }\n                } else {\n                    return {\n                        title: item.name,\n                        key: item.value,\n                        children: this.getItemChild(item.children)\n                    }\n                }\n            })\n        }\n    }\n    getItemChild = (item) => {\n        return item.map(child => {\n            if (child.isLeaf) {\n                return {\n                    title: child.name,\n                    key: child.value\n                }\n            } else {\n                return {\n                    title: child.name,\n                    key: child.value,\n                    children: this.getItemChild(child.children)\n                }\n            }\n        })\n    }\n    updateTreeData = (list, key, children) => {\n        return list.map((node) => {\n          if (node.key === key) {\n            return { ...node, children };\n          } else if (node.children) {\n            return { ...node, children: updateTreeData(node.children, key, children) };\n          }\n      \n          return node;\n        });\n    }\n      \n    onSelect = (keys, event) => {\n        console.log('Trigger Select', keys, event);\n    };\n    \n    onExpand = () => {\n        console.log('Trigger Expand');\n    };\n    render() {\n        return (\n            <div className={styles.trees}>\n                <div className={styles.visitorTitle}> \n                    分类列表 \n                </div>\n               <DirectoryTree\n                    multiple\n                    onSelect={onSelect}\n                    onExpand={onExpand}\n                    treeData={com_classList}\n                />\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}