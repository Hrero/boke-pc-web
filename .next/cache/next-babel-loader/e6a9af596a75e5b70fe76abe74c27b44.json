{"ast":null,"code":"export default (async ({\n  url,\n  method,\n  params\n}) => {\n  function getBrowserInfo() {\n    var agent = navigator.userAgent.toLowerCase();\n    var regStr_ie = /msie [\\d.]+;/gi;\n    var regStr_ff = /firefox\\/[\\d.]+/gi;\n    var regStr_chrome = /chrome\\/[\\d.]+/gi;\n    var regStr_saf = /safari\\/[\\d.]+/gi; //IE\n\n    if (agent.indexOf(\"msie\") > 0) {\n      return agent.match(regStr_ie);\n    } //firefox\n\n\n    if (agent.indexOf(\"firefox\") > 0) {\n      return agent.match(regStr_ff);\n    } //Safari\n\n\n    if (agent.indexOf(\"safari\") > 0 && agent.indexOf(\"chrome\") < 0) {\n      return agent.match(regStr_saf);\n    } //Chrome\n\n\n    if (agent.indexOf(\"chrome\") > 0) {\n      return agent.match(regStr_chrome);\n    }\n  } //（2）然后获取版本号\n\n\n  var browser = getBrowserInfo(); //返回的是个长度为1的数组，根据自己的需要进行转换\n\n  var verinfo = (browser + \"\").replace(/[^0-9.]/gi, \"\");\n  console.log(browser, verinfo, 'verinfoverinfoverinfoverinfo');\n  const res = await fetch(\"http://127.0.0.1:7000\" + url, {\n    headers: {\n      \"content-type\": \"application/json\",\n      \"api-url\": url,\n      \"api-method\": method\n    },\n    method: \"POST\",\n    body: JSON.stringify(params)\n  });\n  return await res.json();\n});","map":{"version":3,"sources":["/Users/app/code/boke-pc-web/httpServer.js"],"names":["url","method","params","getBrowserInfo","agent","navigator","userAgent","toLowerCase","regStr_ie","regStr_ff","regStr_chrome","regStr_saf","indexOf","match","browser","verinfo","replace","console","log","res","fetch","headers","body","JSON","stringify","json"],"mappings":"AAAA,gBAAe,OAAO;AAAEA,EAAAA,GAAF;AAAOC,EAAAA,MAAP;AAAeC,EAAAA;AAAf,CAAP,KAAmC;AAC9C,WAASC,cAAT,GAA0B;AACtB,QAAIC,KAAK,GAAGC,SAAS,CAACC,SAAV,CAAoBC,WAApB,EAAZ;AAEA,QAAIC,SAAS,GAAG,gBAAhB;AACA,QAAIC,SAAS,GAAG,mBAAhB;AACA,QAAIC,aAAa,GAAG,kBAApB;AACA,QAAIC,UAAU,GAAG,kBAAjB,CANsB,CAOtB;;AACA,QAAIP,KAAK,CAACQ,OAAN,CAAc,MAAd,IAAwB,CAA5B,EAA+B;AAC/B,aAAOR,KAAK,CAACS,KAAN,CAAYL,SAAZ,CAAP;AACC,KAVqB,CAYtB;;;AACA,QAAIJ,KAAK,CAACQ,OAAN,CAAc,SAAd,IAA2B,CAA/B,EAAkC;AAClC,aAAOR,KAAK,CAACS,KAAN,CAAYJ,SAAZ,CAAP;AACC,KAfqB,CAiBtB;;;AACA,QAAIL,KAAK,CAACQ,OAAN,CAAc,QAAd,IAA0B,CAA1B,IAA+BR,KAAK,CAACQ,OAAN,CAAc,QAAd,IAA0B,CAA7D,EAAgE;AAChE,aAAOR,KAAK,CAACS,KAAN,CAAYF,UAAZ,CAAP;AACC,KApBqB,CAsBtB;;;AACA,QAAIP,KAAK,CAACQ,OAAN,CAAc,QAAd,IAA0B,CAA9B,EAAiC;AACjC,aAAOR,KAAK,CAACS,KAAN,CAAYH,aAAZ,CAAP;AACC;AACJ,GA3B6C,CA4B9C;;;AACA,MAAII,OAAO,GAAGX,cAAc,EAA5B,CA7B8C,CA6Bd;;AAChC,MAAIY,OAAO,GAAG,CAACD,OAAO,GAAG,EAAX,EAAeE,OAAf,CAAuB,WAAvB,EAAoC,EAApC,CAAd;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAAqBC,OAArB,EAA8B,8BAA9B;AAEA,QAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,0BAA0BpB,GAA3B,EAAgC;AACnDqB,IAAAA,OAAO,EAAE;AACT,sBAAgB,kBADP;AAET,iBAAWrB,GAFF;AAGT,oBAAcC;AAHL,KAD0C;AAMnDA,IAAAA,MAAM,EAAE,MAN2C;AAOnDqB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAetB,MAAf;AAP6C,GAAhC,CAAvB;AASA,SAAO,MAAMiB,GAAG,CAACM,IAAJ,EAAb;AACH,CA5CD","sourcesContent":["export default async ({ url, method, params }) => {\n    function getBrowserInfo() {\n        var agent = navigator.userAgent.toLowerCase();\n\n        var regStr_ie = /msie [\\d.]+;/gi;\n        var regStr_ff = /firefox\\/[\\d.]+/gi;\n        var regStr_chrome = /chrome\\/[\\d.]+/gi;\n        var regStr_saf = /safari\\/[\\d.]+/gi;\n        //IE\n        if (agent.indexOf(\"msie\") > 0) {\n        return agent.match(regStr_ie);\n        }\n\n        //firefox\n        if (agent.indexOf(\"firefox\") > 0) {\n        return agent.match(regStr_ff);\n        }\n\n        //Safari\n        if (agent.indexOf(\"safari\") > 0 && agent.indexOf(\"chrome\") < 0) {\n        return agent.match(regStr_saf);\n        }\n\n        //Chrome\n        if (agent.indexOf(\"chrome\") > 0) {\n        return agent.match(regStr_chrome);\n        }\n    }\n    //（2）然后获取版本号\n    var browser = getBrowserInfo(); //返回的是个长度为1的数组，根据自己的需要进行转换\n    var verinfo = (browser + \"\").replace(/[^0-9.]/gi, \"\");\n\n    console.log(browser, verinfo, 'verinfoverinfoverinfoverinfo');\n\n    const res = await fetch(\"http://127.0.0.1:7000\" + url, {\n        headers: {\n        \"content-type\": \"application/json\",\n        \"api-url\": url,\n        \"api-method\": method,\n        },\n        method: \"POST\",\n        body: JSON.stringify(params),\n    });\n    return await res.json();\n};\n"]},"metadata":{},"sourceType":"module"}