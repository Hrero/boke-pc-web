{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/app/code/boke-pc-web/pages/_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App, { Container } from 'next/app';\nimport { Provider } from 'react-redux';\nimport initializeStore from '../store/store';\nimport withRedux from '../lib/with-redux-app';\nimport '../styles/layoutStyle.scss';\nimport React from 'react';\nimport Layout from '../components/Layout';\nimport http from '../http';\n\nclass MyApp extends App {\n  // App组件的getInitialProps比较特殊\n  // 能拿到一些额外的参数\n  // Component: 被包裹的组件\n  static async getInitialProps(ctx) {\n    const {\n      Component\n    } = ctx;\n    let pageProps = {}; // 拿到Component上定义的getInitialProps\n\n    if (Component.getInitialProps) {\n      // 执行拿到返回结果\n      pageProps = await Component.getInitialProps(ctx);\n    } // 返回给组件\n\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Provider, {\n        store: initializeStore(),\n        children: /*#__PURE__*/_jsxDEV(Layout, {\n          sortList: this.props.sortList,\n          children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nMyApp.getInitialProps = async () => {\n  const data = await http({\n    url: '/sort/getSortList',\n    method: 'get',\n    params: {}\n  });\n  return {\n    sortList: data.data\n  };\n};\n\nexport default withRedux(MyApp);","map":{"version":3,"sources":["/Users/app/code/boke-pc-web/pages/_app.js"],"names":["App","Container","Provider","initializeStore","withRedux","React","Layout","http","MyApp","getInitialProps","ctx","Component","pageProps","render","props","sortList","data","url","method","params"],"mappings":";;;;;;;;;AAAA,OAAOA,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,eAAP,MAA4B,gBAA5B;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAO,4BAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,KAAN,SAAoBR,GAApB,CAAwB;AACpB;AACA;AACA;AACA,eAAaS,eAAb,CAA6BC,GAA7B,EAAkC;AAC9B,UAAM;AAAEC,MAAAA;AAAF,QAAgBD,GAAtB;AACA,QAAIE,SAAS,GAAG,EAAhB,CAF8B,CAI9B;;AACA,QAAID,SAAS,CAACF,eAAd,EAA+B;AAC3B;AACAG,MAAAA,SAAS,GAAG,MAAMD,SAAS,CAACF,eAAV,CAA0BC,GAA1B,CAAlB;AACH,KAR6B,CAS9B;;;AACA,WAAO;AACHE,MAAAA;AADG,KAAP;AAGH;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEF,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKE,KAAtC;AACA,wBACI,QAAC,SAAD;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEX,eAAe,EAAhC;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAE,KAAKW,KAAL,CAAWC,QAA7B;AAAA,iCAEQ,QAAC,SAAD,oBAAeH,SAAf;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AA9BmB;;AAiCxBJ,KAAK,CAACC,eAAN,GAAwB,YAAY;AAChC,QAAMO,IAAI,GAAG,MAAMT,IAAI,CAAC;AAAEU,IAAAA,GAAG,EAAE,mBAAP;AAA4BC,IAAAA,MAAM,EAAE,KAApC;AAA4CC,IAAAA,MAAM,EAAE;AAApD,GAAD,CAAvB;AACA,SAAO;AACHJ,IAAAA,QAAQ,EAAEC,IAAI,CAACA;AADZ,GAAP;AAGH,CALD;;AAQA,eAAeZ,SAAS,CAACI,KAAD,CAAxB","sourcesContent":["import App, { Container } from 'next/app';\nimport { Provider } from 'react-redux';\nimport initializeStore from '../store/store';\nimport withRedux from '../lib/with-redux-app';\nimport '../styles/layoutStyle.scss';\nimport React from 'react';\nimport Layout from '../components/Layout';\nimport http from '../http';\n\nclass MyApp extends App {\n    // App组件的getInitialProps比较特殊\n    // 能拿到一些额外的参数\n    // Component: 被包裹的组件\n    static async getInitialProps(ctx) {\n        const { Component } = ctx\n        let pageProps = {}\n\n        // 拿到Component上定义的getInitialProps\n        if (Component.getInitialProps) {\n            // 执行拿到返回结果\n            pageProps = await Component.getInitialProps(ctx)\n        }\n        // 返回给组件\n        return {\n            pageProps\n        }\n    }\n    render() {\n        const { Component, pageProps } = this.props;\n        return (\n            <Container>\n                <Provider store={initializeStore()}>\n                    <Layout sortList={this.props.sortList} >\n                            {/* 把pageProps解构后传递给组件 */}\n                            <Component {...pageProps} />\n                    </Layout>\n                </Provider>\n            </Container>\n        )\n    }\n}\n\nMyApp.getInitialProps = async () => {\n    const data = await http({ url: '/sort/getSortList', method: 'get' , params: {}})\n    return {\n        sortList: data.data\n    }\n}\n\n\nexport default withRedux(MyApp)"]},"metadata":{},"sourceType":"module"}