{"ast":null,"code":"import _defineProperty from \"/Users/app/code/boke-pc-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _Tree from \"antd/lib/tree\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/app/code/boke-pc-web/components/others/ArticleTrees.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport styles from '../../styles/articleTrees.module.scss';\nimport { isEmpty } from 'zgl-utils-js';\nimport React, { useState } from 'react';\nimport httpAgent from '../../httpAgent';\nvar DirectoryTree = _Tree.DirectoryTree;\nexport default function ArticleTrees(_ref) {\n  _s();\n\n  var com_class_list = _ref.com_class_list;\n  var com_classList = !isEmpty(com_class_list) && com_class_list.map(function (item) {\n    if (item.isLeaf) {\n      return {\n        title: item.name,\n        key: item.value\n      };\n    } else {\n      return {\n        title: item.name,\n        key: item.value,\n        children: getItemChild(item.children)\n      };\n    }\n  });\n\n  var _useState = useState(com_classList),\n      treeData = _useState[0],\n      setTreeData = _useState[1];\n\n  function getItemChild(item) {\n    return item.map(function (child) {\n      if (child.isLeaf) {\n        return {\n          title: child.name,\n          key: child.value\n        };\n      } else {\n        return {\n          title: child.name,\n          key: child.value,\n          children: getItemChild(child.children)\n        };\n      }\n    });\n  }\n\n  function updateTreeData(list, key, children) {\n    return list.map(function (node) {\n      if (node.key === key) {\n        return _objectSpread(_objectSpread({}, node), {}, {\n          children: children\n        });\n      } else if (node.children) {\n        return _objectSpread(_objectSpread({}, node), {}, {\n          children: updateTreeData(node.children, key, children)\n        });\n      }\n\n      return node;\n    });\n  }\n\n  function onSelect(keys, event) {\n    console.log('Trigger Select', keys, event);\n  }\n\n  ;\n\n  function onExpand() {\n    console.log('Trigger Expand');\n  }\n\n  ;\n\n  function onLoadData(_ref2) {\n    var _this = this;\n\n    var key = _ref2.key,\n        children = _ref2.children;\n    console.log(children, 'childrenchildren');\n    var params = {\n      articleId: this.articleId,\n      // 文章id\n      userid: this.state.com_user_info.id,\n      // 评论人id\n      parentCommentId: parentCommentId,\n      // 父评论id\n      parentCommentUserId: parentCommentUserId,\n      // 父级评论的userid\n      replyCommentId: replyCommentId,\n      // 被回复的userid\n      replyCommentUserId: replyCommentUserId,\n      // 被回复的用户id\n      commentLevel: commentLevel,\n      // 评论级别\n      content: content // 内容\n\n    };\n    httpAgent({\n      url: '/article/getArticleList',\n      method: 'post',\n      params: params\n    }).then(function (res) {\n      if (res.code === 0) {\n        _this.getCommentList();\n\n        _this.setState({\n          commlist: [],\n          comChildList: []\n        });\n      }\n\n      _this.setState({\n        visible: false\n      });\n    });\n    return new Promise(function (resolve) {\n      if (children) {\n        resolve();\n        return;\n      }\n\n      setTimeout(function () {\n        setTreeData(function (origin) {\n          return updateTreeData(origin, key, [{\n            title: 'Child Node',\n            key: \"\".concat(key, \"-0\"),\n            isLeaf: true\n          }, {\n            title: 'Child Node',\n            key: \"\".concat(key, \"-1\"),\n            isLeaf: true\n          }]);\n        });\n        resolve();\n      }, 1000);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.trees,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.visitorTitle,\n      children: \"\\u5206\\u7C7B\\u5217\\u8868\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DirectoryTree, {\n      multiple: true,\n      loadData: onLoadData,\n      onSelect: onSelect,\n      onExpand: onExpand,\n      treeData: treeData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ArticleTrees, \"+OGsxxSfGDoejFKl4aPo2dbeuKs=\");\n\n_c = ArticleTrees;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticleTrees\");","map":{"version":3,"sources":["/Users/app/code/boke-pc-web/components/others/ArticleTrees.js"],"names":["styles","isEmpty","React","useState","httpAgent","DirectoryTree","ArticleTrees","com_class_list","com_classList","map","item","isLeaf","title","name","key","value","children","getItemChild","treeData","setTreeData","child","updateTreeData","list","node","onSelect","keys","event","console","log","onExpand","onLoadData","params","articleId","userid","state","com_user_info","id","parentCommentId","parentCommentUserId","replyCommentId","replyCommentUserId","commentLevel","content","url","method","then","res","code","getCommentList","setState","commlist","comChildList","visible","Promise","resolve","setTimeout","origin","trees","visitorTitle"],"mappings":";;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,uCAAnB;AAEA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;IAGQC,a,SAAAA,a;AAER,eAAe,SAASC,YAAT,OAAyC;AAAA;;AAAA,MAAjBC,cAAiB,QAAjBA,cAAiB;AAEpD,MAAOC,aAAa,GAAG,CAACP,OAAO,CAACM,cAAD,CAAR,IAA4BA,cAAc,CAACE,GAAf,CAAmB,UAAAC,IAAI,EAAI;AACzE,QAAIA,IAAI,CAACC,MAAT,EAAiB;AACb,aAAO;AACHC,QAAAA,KAAK,EAAEF,IAAI,CAACG,IADT;AAEHC,QAAAA,GAAG,EAAEJ,IAAI,CAACK;AAFP,OAAP;AAIH,KALD,MAKO;AACH,aAAO;AACHH,QAAAA,KAAK,EAAEF,IAAI,CAACG,IADT;AAEHC,QAAAA,GAAG,EAAEJ,IAAI,CAACK,KAFP;AAGHC,QAAAA,QAAQ,EAAEC,YAAY,CAACP,IAAI,CAACM,QAAN;AAHnB,OAAP;AAKH;AACJ,GAbiD,CAAnD;;AAFoD,kBAgBnBb,QAAQ,CAACK,aAAD,CAhBW;AAAA,MAgB5CU,QAhB4C;AAAA,MAgBlCC,WAhBkC;;AAkBpD,WAASF,YAAT,CAAsBP,IAAtB,EAA4B;AACxB,WAAOA,IAAI,CAACD,GAAL,CAAS,UAAAW,KAAK,EAAI;AACrB,UAAIA,KAAK,CAACT,MAAV,EAAkB;AACd,eAAO;AACHC,UAAAA,KAAK,EAAEQ,KAAK,CAACP,IADV;AAEHC,UAAAA,GAAG,EAAEM,KAAK,CAACL;AAFR,SAAP;AAIH,OALD,MAKO;AACH,eAAO;AACHH,UAAAA,KAAK,EAAEQ,KAAK,CAACP,IADV;AAEHC,UAAAA,GAAG,EAAEM,KAAK,CAACL,KAFR;AAGHC,UAAAA,QAAQ,EAAEC,YAAY,CAACG,KAAK,CAACJ,QAAP;AAHnB,SAAP;AAKH;AACJ,KAbM,CAAP;AAcH;;AACD,WAASK,cAAT,CAAyBC,IAAzB,EAA+BR,GAA/B,EAAoCE,QAApC,EAA8C;AAC1C,WAAOM,IAAI,CAACb,GAAL,CAAS,UAACc,IAAD,EAAU;AACxB,UAAIA,IAAI,CAACT,GAAL,KAAaA,GAAjB,EAAsB;AACpB,+CAAYS,IAAZ;AAAkBP,UAAAA,QAAQ,EAARA;AAAlB;AACD,OAFD,MAEO,IAAIO,IAAI,CAACP,QAAT,EAAmB;AACxB,+CAAYO,IAAZ;AAAkBP,UAAAA,QAAQ,EAAEK,cAAc,CAACE,IAAI,CAACP,QAAN,EAAgBF,GAAhB,EAAqBE,QAArB;AAA1C;AACD;;AAED,aAAOO,IAAP;AACD,KARM,CAAP;AASH;;AACD,WAASC,QAAT,CAAkBC,IAAlB,EAAwBC,KAAxB,EAA+B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,IAA9B,EAAoCC,KAApC;AACH;;AAAA;;AAED,WAASG,QAAT,GAAoB;AAChBF,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;;AAAA;;AACD,WAASE,UAAT,QAAuC;AAAA;;AAAA,QAAjBhB,GAAiB,SAAjBA,GAAiB;AAAA,QAAZE,QAAY,SAAZA,QAAY;AACnCW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ,EAAsB,kBAAtB;AACA,QAAMe,MAAM,GAAG;AACXC,MAAAA,SAAS,EAAE,KAAKA,SADL;AACgB;AAC3BC,MAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,aAAX,CAAyBC,EAFtB;AAE0B;AACrCC,MAAAA,eAAe,EAAfA,eAHW;AAGM;AACjBC,MAAAA,mBAAmB,EAAnBA,mBAJW;AAIU;AACrBC,MAAAA,cAAc,EAAdA,cALW;AAKK;AAChBC,MAAAA,kBAAkB,EAAlBA,kBANW;AAMS;AACpBC,MAAAA,YAAY,EAAZA,YAPW;AAOG;AACdC,MAAAA,OAAO,EAAPA,OARW,CAQH;;AARG,KAAf;AAUAtC,IAAAA,SAAS,CAAC;AAACuC,MAAAA,GAAG,EAAE,yBAAN;AAAiCC,MAAAA,MAAM,EAAE,MAAzC;AAAkDb,MAAAA,MAAM,EAANA;AAAlD,KAAD,CAAT,CAAqEc,IAArE,CAA0E,UAAAC,GAAG,EAAI;AAC7E,UAAIA,GAAG,CAACC,IAAJ,KAAa,CAAjB,EAAoB;AAChB,QAAA,KAAI,CAACC,cAAL;;AACA,QAAA,KAAI,CAACC,QAAL,CAAc;AACVC,UAAAA,QAAQ,EAAE,EADA;AAEVC,UAAAA,YAAY,EAAE;AAFJ,SAAd;AAIH;;AACD,MAAA,KAAI,CAACF,QAAL,CAAc;AACVG,QAAAA,OAAO,EAAE;AADC,OAAd;AAGH,KAXD;AAYA,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC5B,UAAItC,QAAJ,EAAc;AACVsC,QAAAA,OAAO;AACP;AACH;;AACDC,MAAAA,UAAU,CAAC,YAAM;AACbpC,QAAAA,WAAW,CAAC,UAACqC,MAAD;AAAA,iBACRnC,cAAc,CAACmC,MAAD,EAAS1C,GAAT,EAAc,CACxB;AACIF,YAAAA,KAAK,EAAE,YADX;AAEIE,YAAAA,GAAG,YAAKA,GAAL,OAFP;AAGIH,YAAAA,MAAM,EAAE;AAHZ,WADwB,EAMxB;AACIC,YAAAA,KAAK,EAAE,YADX;AAEIE,YAAAA,GAAG,YAAKA,GAAL,OAFP;AAGIH,YAAAA,MAAM,EAAE;AAHZ,WANwB,CAAd,CADN;AAAA,SAAD,CAAX;AAcA2C,QAAAA,OAAO;AACV,OAhBS,EAgBP,IAhBO,CAAV;AAiBH,KAtBM,CAAP;AAuBH;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAEtD,MAAM,CAACyD,KAAvB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEzD,MAAM,CAAC0D,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,aAAD;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,QAAQ,EAAE5B,UAFd;AAGI,MAAA,QAAQ,EAAEN,QAHd;AAII,MAAA,QAAQ,EAAEK,QAJd;AAKI,MAAA,QAAQ,EAAEX;AALd;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GApHuBZ,Y;;KAAAA,Y","sourcesContent":["import styles from '../../styles/articleTrees.module.scss';\nimport { Tree } from 'antd';\nimport { isEmpty } from 'zgl-utils-js';\nimport React, { useState } from 'react';\nimport httpAgent from '../../httpAgent';\n\n\nconst { DirectoryTree } = Tree;\n\nexport default function ArticleTrees ({com_class_list}) {\n\n    const  com_classList = !isEmpty(com_class_list) && com_class_list.map(item => {\n         if (item.isLeaf) {\n             return {\n                 title: item.name,\n                 key: item.value\n             }\n         } else {\n             return {\n                 title: item.name,\n                 key: item.value,\n                 children: getItemChild(item.children)\n             }\n         }\n     })\n     const [treeData, setTreeData] = useState(com_classList)\n\n    function getItemChild(item) {\n        return item.map(child => {\n            if (child.isLeaf) {\n                return {\n                    title: child.name,\n                    key: child.value\n                }\n            } else {\n                return {\n                    title: child.name,\n                    key: child.value,\n                    children: getItemChild(child.children)\n                }\n            }\n        })\n    }\n    function updateTreeData (list, key, children) {\n        return list.map((node) => {\n          if (node.key === key) {\n            return { ...node, children };\n          } else if (node.children) {\n            return { ...node, children: updateTreeData(node.children, key, children) };\n          }\n      \n          return node;\n        });\n    }\n    function onSelect(keys, event) {\n        console.log('Trigger Select', keys, event);\n    };\n    \n    function onExpand() {\n        console.log('Trigger Expand');\n    };\n    function onLoadData({ key, children }) {\n        console.log(children, 'childrenchildren');\n        const params = {\n            articleId: this.articleId, // 文章id\n            userid: this.state.com_user_info.id, // 评论人id\n            parentCommentId, // 父评论id\n            parentCommentUserId, // 父级评论的userid\n            replyCommentId, // 被回复的userid\n            replyCommentUserId, // 被回复的用户id\n            commentLevel, // 评论级别\n            content // 内容\n        }\n        httpAgent({url: '/article/getArticleList', method: 'post' , params}).then(res => {\n            if (res.code === 0) {\n                this.getCommentList()\n                this.setState({\n                    commlist: [],\n                    comChildList: []\n                })\n            }\n            this.setState({\n                visible: false\n            })\n        })\n        return new Promise((resolve) => {\n            if (children) {\n                resolve();\n                return;\n            }\n            setTimeout(() => {\n                setTreeData((origin) =>\n                    updateTreeData(origin, key, [\n                        {\n                            title: 'Child Node',\n                            key: `${key}-0`,\n                            isLeaf: true\n                        },\n                        {\n                            title: 'Child Node',\n                            key: `${key}-1`,\n                            isLeaf: true\n                        },\n                    ]),\n                );\n                resolve();\n            }, 1000);\n        });\n    }\n\n     \n    return (\n        <div className={styles.trees}>\n            <div className={styles.visitorTitle}> \n                分类列表 \n            </div>\n            <DirectoryTree\n                multiple\n                loadData={onLoadData}\n                onSelect={onSelect}\n                onExpand={onExpand}\n                treeData={treeData}\n            />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}