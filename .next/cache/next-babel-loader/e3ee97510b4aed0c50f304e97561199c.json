{"ast":null,"code":"import _readOnlyError from \"/Users/app/code/boke-pc-web/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nimport _defineProperty from \"/Users/app/code/boke-pc-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport indexState from '../store/index';\nimport postState from '../store/post';\nimport comState from '../store/com';\nvar allState = Object.assign(indexState, postState, comState);\nvar initialState = Object.keys(allState).map(function (key) {\n  return _defineProperty({}, key, allState[key]()['default']);\n});\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var backState = null;\n\n  if (action.type === 'handleLabelPage') {\n    return allState['labelPage'](action.page)['data'];\n  }\n\n  Object.keys(allState).forEach(function (element) {\n    if (action.type === allState[element](action.page)['type']) {\n      backState = (_readOnlyError(\"backState\"), allState[element](action.page)['data']);\n    }\n  });\n\n  if (action.type === 'testHandle') {\n    return {\n      indexPage: {\n        articleData: action.data\n      }\n    };\n  }\n\n  return state;\n} // function reducer(state = initialState, action) {\n//     const returnState = {};\n//     Object.keys(allState).forEach(rer => {\n//         if (action.type === rer) {\n//             console.log(rer, action.type);\n//             returnState = allState[rer]()['data']\n//         }\n//     })\n//     console.log(returnState);\n//     // if (action.type === 'handleLabelPage') {\n//     //     return {\n//     //         labelPage: Number(action.labelPage)\n//     //     };\n//     // }\n//     // if (action.type === 'testHandle') {\n//     //     return {\n//     //         indexPage: {\n//     //             articleData: action.data\n//     //         }\n//     //     };\n//     // }\n//     return returnState;\n// }\n// 这里暴露出的是创建store的工厂方法\n// 每次渲染都需要重新创建一个store实例\n// 防止服务端一直复用旧实例 无法和客户端状态同步\n\n\nexport default function initializeStore(state) {\n  var store = createStore(reducer, Object.assign({}, initialState, state), applyMiddleware(ReduxThunk));\n  return store;\n}","map":{"version":3,"sources":["/Users/app/code/boke-pc-web/store/store.js"],"names":["createStore","applyMiddleware","ReduxThunk","indexState","postState","comState","allState","Object","assign","initialState","keys","map","key","reducer","state","action","backState","type","page","forEach","element","indexPage","articleData","data","initializeStore","store"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,QAAP,MAAqB,cAArB;AAEA,IAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAcL,UAAd,EAA0BC,SAA1B,EAAqCC,QAArC,CAAjB;AAEA,IAAMI,YAAY,GAAGF,MAAM,CAACG,IAAP,CAAYJ,QAAZ,EAAsBK,GAAtB,CAA0B,UAAAC,GAAG,EAAI;AAClD,6BACKA,GADL,EACWN,QAAQ,CAACM,GAAD,CAAR,GAAgB,SAAhB,CADX;AAGH,CAJoB,CAArB;;AAMA,SAASC,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;AAC3C,MAAMC,SAAS,GAAG,IAAlB;;AACA,MAAID,MAAM,CAACE,IAAP,KAAgB,iBAApB,EAAuC;AACnC,WAAOX,QAAQ,CAAC,WAAD,CAAR,CAAsBS,MAAM,CAACG,IAA7B,EAAmC,MAAnC,CAAP;AACH;;AACDX,EAAAA,MAAM,CAACG,IAAP,CAAYJ,QAAZ,EAAsBa,OAAtB,CAA8B,UAAAC,OAAO,EAAI;AACrC,QAAIL,MAAM,CAACE,IAAP,KAAgBX,QAAQ,CAACc,OAAD,CAAR,CAAkBL,MAAM,CAACG,IAAzB,EAA+B,MAA/B,CAApB,EAA4D;AACxDF,MAAAA,SAAS,iCAAGV,QAAQ,CAACc,OAAD,CAAR,CAAkBL,MAAM,CAACG,IAAzB,EAA+B,MAA/B,CAAH,CAAT;AACH;AAEJ,GALD;;AAOA,MAAIH,MAAM,CAACE,IAAP,KAAgB,YAApB,EAAkC;AAC9B,WAAO;AACHI,MAAAA,SAAS,EAAE;AACPC,QAAAA,WAAW,EAAEP,MAAM,CAACQ;AADb;AADR,KAAP;AAKH;;AACD,SAAOT,KAAP;AACH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;AACA,eAAe,SAASU,eAAT,CAAyBV,KAAzB,EAAgC;AAE3C,MAAMW,KAAK,GAAGzB,WAAW,CACrBa,OADqB,EAErBN,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBC,YAAlB,EAAgCK,KAAhC,CAFqB,EAGrBb,eAAe,CAACC,UAAD,CAHM,CAAzB;AAKA,SAAOuB,KAAP;AACH","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport indexState from '../store/index';\nimport postState from '../store/post';\nimport comState from '../store/com';\n\nconst allState = Object.assign(indexState, postState, comState);\n\nconst initialState = Object.keys(allState).map(key => {\n    return {\n        [key]: allState[key]()['default']\n    }\n})\n\nfunction reducer(state = initialState, action) {\n    const backState = null;\n    if (action.type === 'handleLabelPage') {\n        return allState['labelPage'](action.page)['data'];\n    }\n    Object.keys(allState).forEach(element => {\n        if (action.type === allState[element](action.page)['type']) {\n            backState = allState[element](action.page)['data']\n        }\n        \n    });\n\n    if (action.type === 'testHandle') {\n        return {\n            indexPage: {\n                articleData: action.data\n            }\n        };\n    }\n    return state;\n}\n\n// function reducer(state = initialState, action) {\n//     const returnState = {};\n//     Object.keys(allState).forEach(rer => {\n//         if (action.type === rer) {\n//             console.log(rer, action.type);\n//             returnState = allState[rer]()['data']\n//         }\n//     })\n//     console.log(returnState);\n//     // if (action.type === 'handleLabelPage') {\n//     //     return {\n//     //         labelPage: Number(action.labelPage)\n//     //     };\n//     // }\n\n//     // if (action.type === 'testHandle') {\n//     //     return {\n//     //         indexPage: {\n//     //             articleData: action.data\n//     //         }\n//     //     };\n//     // }\n\n//     return returnState;\n// }\n\n// 这里暴露出的是创建store的工厂方法\n// 每次渲染都需要重新创建一个store实例\n// 防止服务端一直复用旧实例 无法和客户端状态同步\nexport default function initializeStore(state) {\n\n    const store = createStore(\n        reducer,\n        Object.assign({}, initialState, state),\n        applyMiddleware(ReduxThunk)\n    )\n    return store;\n}\n"]},"metadata":{},"sourceType":"module"}