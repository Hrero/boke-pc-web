{"ast":null,"code":"import _regeneratorRuntime from \"/Users/app/code/boke-pc-web/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/app/code/boke-pc-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/app/code/boke-pc-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport indexState from '../store/index';\nimport postState from '../store/post';\nimport comState from '../store/com';\nimport infoState from '../store/info';\nvar allState = Object.assign(indexState, postState, comState, infoState);\nvar initialState = Object.keys(allState).map( /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(key) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log();\n\n            if (!(key = 'com_label_integer')) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.t0 = console;\n            _context.next = 5;\n            return allState[key]();\n\n          case 5:\n            _context.t1 = _context.sent;\n\n            _context.t0.log.call(_context.t0, 'allState[key](): ', _context.t1);\n\n          case 7:\n            _context.t2 = _defineProperty;\n            _context.t3 = {};\n            _context.t4 = key;\n            _context.next = 12;\n            return allState[key]()['default'];\n\n          case 12:\n            _context.t5 = _context.sent;\n            return _context.abrupt(\"return\", (0, _context.t2)(_context.t3, _context.t4, _context.t5));\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}()); // 这里暴露出的是创建store的工厂方法\n// 每次渲染都需要重新创建一个store实例\n// 防止服务端一直复用旧实例 无法和客户端状态同步\n\nexport default function initializeStore(state) {\n  var store = createStore(function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n    var backState = null;\n    Object.keys(allState).forEach(function (item) {\n      var fn = allState[item](action);\n\n      if (action.type === fn['type']) {\n        backState = fn['data'];\n      }\n    });\n    return backState ? backState : state;\n  }, Object.assign({}, initialState, state), applyMiddleware(ReduxThunk));\n  return store;\n}","map":{"version":3,"sources":["/Users/app/code/boke-pc-web/store/store.js"],"names":["createStore","applyMiddleware","ReduxThunk","indexState","postState","comState","infoState","allState","Object","assign","initialState","keys","map","key","console","log","initializeStore","state","store","action","backState","forEach","item","fn","type"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AAEA,IAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAcN,UAAd,EAA0BC,SAA1B,EAAqCC,QAArC,EAA+CC,SAA/C,CAAjB;AAEA,IAAMI,YAAY,GAAGF,MAAM,CAACG,IAAP,CAAYJ,QAAZ,EAAsBK,GAAtB;AAAA,sEAA0B,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAC3CC,YAAAA,OAAO,CAACC,GAAR;;AAD2C,kBAEvCF,GAAG,GAAG,mBAFiC;AAAA;AAAA;AAAA;;AAAA,0BAIvCC,OAJuC;AAAA;AAAA,mBAIAP,QAAQ,CAACM,GAAD,CAAR,EAJA;;AAAA;AAAA;;AAAA,wBAI/BE,GAJ+B,mBAI3B,mBAJ2B;;AAAA;AAAA;AAAA;AAAA,0BAOtCF,GAPsC;AAAA;AAAA,mBAO1BN,QAAQ,CAACM,GAAD,CAAR,GAAgB,SAAhB,CAP0B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA,IAArB,C,CAWA;AACA;AACA;;AACA,eAAe,SAASG,eAAT,CAAyBC,KAAzB,EAAgC;AAC3C,MAAMC,KAAK,GAAGlB,WAAW,CACrB,YAAkC;AAAA,QAAjCiB,KAAiC,uEAAzBP,YAAyB;AAAA,QAAXS,MAAW;AAC9B,QAAIC,SAAS,GAAG,IAAhB;AACAZ,IAAAA,MAAM,CAACG,IAAP,CAAYJ,QAAZ,EAAsBc,OAAtB,CAA8B,UAAAC,IAAI,EAAI;AAClC,UAAMC,EAAE,GAAGhB,QAAQ,CAACe,IAAD,CAAR,CAAeH,MAAf,CAAX;;AACA,UAAIA,MAAM,CAACK,IAAP,KAAgBD,EAAE,CAAC,MAAD,CAAtB,EAAgC;AAC5BH,QAAAA,SAAS,GAAGG,EAAE,CAAC,MAAD,CAAd;AACH;AACJ,KALD;AAMA,WAAOH,SAAS,GAAEA,SAAF,GAAaH,KAA7B;AACH,GAVoB,EAWrBT,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBC,YAAlB,EAAgCO,KAAhC,CAXqB,EAYrBhB,eAAe,CAACC,UAAD,CAZM,CAAzB;AAcA,SAAOgB,KAAP;AACH","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport indexState from '../store/index';\nimport postState from '../store/post';\nimport comState from '../store/com';\nimport infoState from '../store/info';\n\nconst allState = Object.assign(indexState, postState, comState, infoState);\n\nconst initialState = Object.keys(allState).map(async key => {\n    console.log();\n    if (key = 'com_label_integer') {\n        // allState[key]()\n        console.log('allState[key](): ', await allState[key]());\n    }\n    return {\n        [key]: await allState[key]()['default']\n    }\n})\n\n// 这里暴露出的是创建store的工厂方法\n// 每次渲染都需要重新创建一个store实例\n// 防止服务端一直复用旧实例 无法和客户端状态同步\nexport default function initializeStore(state) {\n    const store = createStore(\n        (state = initialState, action) => {\n            let backState = null;\n            Object.keys(allState).forEach(item => {\n                const fn = allState[item](action);\n                if (action.type === fn['type']) {\n                    backState = fn['data'];\n                }\n            })\n            return backState? backState: state;\n        },\n        Object.assign({}, initialState, state),\n        applyMiddleware(ReduxThunk)\n    )\n    return store;\n}\n"]},"metadata":{},"sourceType":"module"}