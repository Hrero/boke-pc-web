{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/app/code/boke-pc-web/lib/with-redux-app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport initializeStore from \"../store/store\";\nconst isServer = true;\nconst __NEXT_REDUX_STORE__ = \"__NEXT_REDUX_STORE__\";\n\nfunction getOrCreateStore(initialState) {\n  if (isServer) {\n    // 服务端每次执行都重新创建一个store\n    return initializeStore(initialState);\n  } // 在客户端执行这个方法的时候 优先返回window上已有的store\n  // 而不能每次执行都重新创建一个store 否则状态就无限重置了\n\n\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\n  }\n\n  return window[__NEXT_REDUX_STORE__];\n}\n\nexport default (Comp => {\n  class withReduxApp extends React.Component {\n    constructor(props) {\n      super(props); // getInitialProps创建了store 这里为什么又重新创建一次？\n      // 因为服务端执行了getInitialProps之后 返回给客户端的是序列化后的字符串\n      // redux里有很多方法 不适合序列化存储\n      // 所以选择在getInitialProps返回initialReduxState初始的状态\n      // 再在这里通过initialReduxState去创建一个完整的store\n\n      this.reduxStore = getOrCreateStore(props.initialReduxState);\n    }\n\n    render() {\n      const _this$props = this.props,\n            {\n        Component,\n        pageProps\n      } = _this$props,\n            rest = _objectWithoutProperties(_this$props, [\"Component\", \"pageProps\"]);\n\n      return /*#__PURE__*/_jsxDEV(Comp, _objectSpread(_objectSpread({}, rest), {}, {\n        Component: Component,\n        pageProps: pageProps,\n        reduxStore: this.reduxStore\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this);\n    }\n\n  } // 这个其实是_app.js的getInitialProps\n  // 在服务端渲染和客户端路由跳转时会被执行\n  // 所以非常适合做redux-store的初始化\n\n\n  withReduxApp.getInitialProps = async ctx => {\n    const reduxStore = getOrCreateStore();\n    ctx.reduxStore = reduxStore;\n    let appProps = {};\n\n    if (typeof Comp.getInitialProps === \"function\") {\n      appProps = await Comp.getInitialProps(ctx);\n    }\n\n    return _objectSpread(_objectSpread({}, appProps), {}, {\n      initialReduxState: reduxStore.getState()\n    });\n  };\n\n  return withReduxApp;\n});","map":{"version":3,"sources":["/Users/app/code/boke-pc-web/lib/with-redux-app.js"],"names":["React","initializeStore","isServer","__NEXT_REDUX_STORE__","getOrCreateStore","initialState","window","Comp","withReduxApp","Component","constructor","props","reduxStore","initialReduxState","render","pageProps","rest","getInitialProps","ctx","appProps","getState"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,gBAA5B;AAEA,MAAMC,QAAQ,OAAd;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;;AAEA,SAASC,gBAAT,CAA0BC,YAA1B,EAAwC;AACpC,MAAIH,QAAJ,EAAc;AACV;AACA,WAAOD,eAAe,CAACI,YAAD,CAAtB;AACH,GAJmC,CAKpC;AACA;;;AACA,MAAI,CAACC,MAAM,CAACH,oBAAD,CAAX,EAAmC;AAC/BG,IAAAA,MAAM,CAACH,oBAAD,CAAN,GAA+BF,eAAe,CAACI,YAAD,CAA9C;AACH;;AACD,SAAOC,MAAM,CAACH,oBAAD,CAAb;AACC;;AAED,gBAAgBI,IAAD,IAAU;AACzB,QAAMC,YAAN,SAA2BR,KAAK,CAACS,SAAjC,CAA2C;AACvCC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,YAAMA,KAAN,EADmB,CAEnB;AACA;AACA;AACA;AACA;;AACA,WAAKC,UAAL,GAAkBR,gBAAgB,CAACO,KAAK,CAACE,iBAAP,CAAlC;AACC;;AAEDC,IAAAA,MAAM,GAAG;AACT,0BAA0C,KAAKH,KAA/C;AAAA,YAAM;AAAEF,QAAAA,SAAF;AAAaM,QAAAA;AAAb,OAAN;AAAA,YAAiCC,IAAjC;;AACA,0BACI,QAAC,IAAD,kCACIA,IADJ;AAEA,QAAA,SAAS,EAAEP,SAFX;AAGA,QAAA,SAAS,EAAEM,SAHX;AAIA,QAAA,UAAU,EAAE,KAAKH;AAJjB;AAAA;AAAA;AAAA;AAAA,cADJ;AAQC;;AArBsC,GADlB,CAyBzB;AACA;AACA;;;AACAJ,EAAAA,YAAY,CAACS,eAAb,GAA+B,MAAOC,GAAP,IAAe;AAC1C,UAAMN,UAAU,GAAGR,gBAAgB,EAAnC;AACAc,IAAAA,GAAG,CAACN,UAAJ,GAAiBA,UAAjB;AAEA,QAAIO,QAAQ,GAAG,EAAf;;AACA,QAAI,OAAOZ,IAAI,CAACU,eAAZ,KAAgC,UAApC,EAAgD;AAC5CE,MAAAA,QAAQ,GAAG,MAAMZ,IAAI,CAACU,eAAL,CAAqBC,GAArB,CAAjB;AACH;;AAED,2CACGC,QADH;AAEAN,MAAAA,iBAAiB,EAAED,UAAU,CAACQ,QAAX;AAFnB;AAIH,GAbD;;AAeA,SAAOZ,YAAP;AACH,CA5CG","sourcesContent":["import React from \"react\";\nimport initializeStore from \"../store/store\";\n\nconst isServer = typeof window === \"undefined\";\nconst __NEXT_REDUX_STORE__ = \"__NEXT_REDUX_STORE__\";\n\nfunction getOrCreateStore(initialState) {\n    if (isServer) {\n        // 服务端每次执行都重新创建一个store\n        return initializeStore(initialState);\n    }\n    // 在客户端执行这个方法的时候 优先返回window上已有的store\n    // 而不能每次执行都重新创建一个store 否则状态就无限重置了\n    if (!window[__NEXT_REDUX_STORE__]) {\n        window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\n    }\n    return window[__NEXT_REDUX_STORE__];\n    }\n\n    export default (Comp) => {\n    class withReduxApp extends React.Component {\n        constructor(props) {\n        super(props);\n        // getInitialProps创建了store 这里为什么又重新创建一次？\n        // 因为服务端执行了getInitialProps之后 返回给客户端的是序列化后的字符串\n        // redux里有很多方法 不适合序列化存储\n        // 所以选择在getInitialProps返回initialReduxState初始的状态\n        // 再在这里通过initialReduxState去创建一个完整的store\n        this.reduxStore = getOrCreateStore(props.initialReduxState);\n        }\n\n        render() {\n        const { Component, pageProps, ...rest } = this.props;\n        return (\n            <Comp\n            {...rest}\n            Component={Component}\n            pageProps={pageProps}\n            reduxStore={this.reduxStore}\n            />\n        );\n        }\n    }\n\n    // 这个其实是_app.js的getInitialProps\n    // 在服务端渲染和客户端路由跳转时会被执行\n    // 所以非常适合做redux-store的初始化\n    withReduxApp.getInitialProps = async (ctx) => {\n        const reduxStore = getOrCreateStore();\n        ctx.reduxStore = reduxStore;\n\n        let appProps = {};\n        if (typeof Comp.getInitialProps === \"function\") {\n            appProps = await Comp.getInitialProps(ctx);\n        }\n\n        return {\n        ...appProps,\n        initialReduxState: reduxStore.getState(),\n        };\n    };\n\n    return withReduxApp;\n};\n"]},"metadata":{},"sourceType":"module"}