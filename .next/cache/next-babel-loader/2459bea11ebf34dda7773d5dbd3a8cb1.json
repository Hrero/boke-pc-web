{"ast":null,"code":"import _Tree from \"antd/lib/tree\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/app/code/boke-pc-web/components/others/ArticleTrees.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport styles from '../../styles/articleTrees.module.scss';\nimport { isEmpty } from 'zgl-utils-js';\nimport React from 'react';\nconst {\n  DirectoryTree\n} = _Tree;\nexport default class ArticleTrees extends React.Component {\n  constructor(props) {\n    this.state = {\n      com_class_list: this.props.com_class_list\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.trees,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.visitorTitle,\n        children: \"\\u5206\\u7C7B\\u5217\\u8868\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DirectoryTree, {\n        multiple: true,\n        onSelect: onSelect,\n        onExpand: onExpand,\n        treeData: com_classList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/app/code/boke-pc-web/components/others/ArticleTrees.js"],"names":["styles","isEmpty","React","DirectoryTree","ArticleTrees","Component","constructor","props","state","com_class_list","render","trees","visitorTitle","onSelect","onExpand","com_classList"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,uCAAnB;AAEA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,MAAM;AAAEC,EAAAA;AAAF,SAAN;AAEA,eAAe,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,SAAKC,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE,KAAKF,KAAL,CAAWE;AADlB,KAAb;AAGH;;AAkDDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAEV,MAAM,CAACW,KAAvB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEX,MAAM,CAACY,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAIG,QAAC,aAAD;AACK,QAAA,QAAQ,MADb;AAEK,QAAA,QAAQ,EAAEC,QAFf;AAGK,QAAA,QAAQ,EAAEC,QAHf;AAIK,QAAA,QAAQ,EAAEC;AAJf;AAAA;AAAA;AAAA;AAAA,cAJH;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AArEqD","sourcesContent":["import styles from '../../styles/articleTrees.module.scss';\nimport { Tree } from 'antd';\nimport { isEmpty } from 'zgl-utils-js';\nimport React from 'react';\n\n\nconst { DirectoryTree } = Tree;\n\nexport default class ArticleTrees extends React.Component {\n    constructor(props) {\n        this.state = {\n            com_class_list: this.props.com_class_list\n        }\n    }\n    getItemChild = (item) => {\n        return item.map(child => {\n            if (child.isLeaf) {\n                return {\n                    title: child.name,\n                    key: child.value\n                }\n            } else {\n                return {\n                    title: child.name,\n                    key: child.value,\n                    children: getItemChild(child.children)\n                }\n            }\n        })\n    }\n    com_classList = !isEmpty(com_class_list) && com_class_list.map(item => {\n        if (item.isLeaf) {\n            return {\n                title: item.name,\n                key: item.value\n            }\n        } else {\n            return {\n                title: item.name,\n                key: item.value,\n                children: getItemChild(item.children)\n            }\n        }\n    })\n    updateTreeData = (list, key, children) => {\n        return list.map((node) => {\n          if (node.key === key) {\n            return { ...node, children };\n          } else if (node.children) {\n            return { ...node, children: updateTreeData(node.children, key, children) };\n          }\n      \n          return node;\n        });\n    }\n      \n    onSelect = (keys, event) => {\n        console.log('Trigger Select', keys, event);\n    };\n    \n    onExpand = () => {\n        console.log('Trigger Expand');\n    };\n    render() {\n        return (\n            <div className={styles.trees}>\n                <div className={styles.visitorTitle}> \n                    分类列表 \n                </div>\n               <DirectoryTree\n                    multiple\n                    onSelect={onSelect}\n                    onExpand={onExpand}\n                    treeData={com_classList}\n                />\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}