{"ast":null,"code":"import _classCallCheck from \"/Users/app/code/boke-pc-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/app/code/boke-pc-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/app/code/boke-pc-web/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/app/code/boke-pc-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/app/code/boke-pc-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/app/code/boke-pc-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/app/code/boke-pc-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _Tree from \"antd/lib/tree\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/app/code/boke-pc-web/components/others/ArticleTrees.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport styles from '../../styles/articleTrees.module.scss';\nimport { isEmpty } from 'zgl-utils-js';\nimport React from 'react';\nvar DirectoryTree = _Tree.DirectoryTree;\n\nvar ArticleTrees = /*#__PURE__*/function (_React$Component) {\n  _inherits(ArticleTrees, _React$Component);\n\n  var _super = _createSuper(ArticleTrees);\n\n  function ArticleTrees(props) {\n    var _this;\n\n    _classCallCheck(this, ArticleTrees);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getItemChild\", function (item) {\n      return item.map(function (child) {\n        if (child.isLeaf) {\n          return {\n            title: child.name,\n            key: child.value\n          };\n        } else {\n          return {\n            title: child.name,\n            key: child.value,\n            children: _this.getItemChild(child.children)\n          };\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateTreeData\", function (list, key, children) {\n      return list.map(function (node) {\n        if (node.key === key) {\n          return _objectSpread(_objectSpread({}, node), {}, {\n            children: children\n          });\n        } else if (node.children) {\n          return _objectSpread(_objectSpread({}, node), {}, {\n            children: updateTreeData(node.children, key, children)\n          });\n        }\n\n        return node;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSelect\", function (keys, event) {\n      console.log('Trigger Select', keys, event);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onExpand\", function () {\n      console.log('Trigger Expand');\n    });\n\n    _this.state = {\n      com_classList: !isEmpty(_this.props.com_class_list) && _this.props.com_class_list.map(function (item) {\n        if (item.isLeaf) {\n          return {\n            title: item.name,\n            key: item.value\n          };\n        } else {\n          return {\n            title: item.name,\n            key: item.value,\n            children: _this.getItemChild(item.children)\n          };\n        }\n      })\n    };\n    return _this;\n  }\n\n  _createClass(ArticleTrees, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.trees,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.visitorTitle,\n          children: \"\\u5206\\u7C7B\\u5217\\u8868\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DirectoryTree, {\n          multiple: true,\n          loadData: this.onLoadData,\n          onSelect: function onSelect() {\n            return _this2.onSelect();\n          },\n          onExpand: function onExpand() {\n            return _this2.onExpand();\n          },\n          treeData: this.state.com_classList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return ArticleTrees;\n}(React.Component);\n\nexport { ArticleTrees as default };","map":{"version":3,"sources":["/Users/app/code/boke-pc-web/components/others/ArticleTrees.js"],"names":["styles","isEmpty","React","DirectoryTree","ArticleTrees","props","item","map","child","isLeaf","title","name","key","value","children","getItemChild","list","node","updateTreeData","keys","event","console","log","state","com_classList","com_class_list","trees","visitorTitle","onLoadData","onSelect","onExpand","Component"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,uCAAnB;AAEA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;IAGQC,a,SAAAA,a;;IAEaC,Y;;;;;AACjB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,mEAmBJ,UAACC,IAAD,EAAU;AACrB,aAAOA,IAAI,CAACC,GAAL,CAAS,UAAAC,KAAK,EAAI;AACrB,YAAIA,KAAK,CAACC,MAAV,EAAkB;AACd,iBAAO;AACHC,YAAAA,KAAK,EAAEF,KAAK,CAACG,IADV;AAEHC,YAAAA,GAAG,EAAEJ,KAAK,CAACK;AAFR,WAAP;AAIH,SALD,MAKO;AACH,iBAAO;AACHH,YAAAA,KAAK,EAAEF,KAAK,CAACG,IADV;AAEHC,YAAAA,GAAG,EAAEJ,KAAK,CAACK,KAFR;AAGHC,YAAAA,QAAQ,EAAE,MAAKC,YAAL,CAAkBP,KAAK,CAACM,QAAxB;AAHP,WAAP;AAKH;AACJ,OAbM,CAAP;AAcH,KAlCkB;;AAAA,qEAmCF,UAACE,IAAD,EAAOJ,GAAP,EAAYE,QAAZ,EAAyB;AACtC,aAAOE,IAAI,CAACT,GAAL,CAAS,UAACU,IAAD,EAAU;AACxB,YAAIA,IAAI,CAACL,GAAL,KAAaA,GAAjB,EAAsB;AACpB,iDAAYK,IAAZ;AAAkBH,YAAAA,QAAQ,EAARA;AAAlB;AACD,SAFD,MAEO,IAAIG,IAAI,CAACH,QAAT,EAAmB;AACxB,iDAAYG,IAAZ;AAAkBH,YAAAA,QAAQ,EAAEI,cAAc,CAACD,IAAI,CAACH,QAAN,EAAgBF,GAAhB,EAAqBE,QAArB;AAA1C;AACD;;AAED,eAAOG,IAAP;AACD,OARM,CAAP;AASH,KA7CkB;;AAAA,+DA+CR,UAACE,IAAD,EAAOC,KAAP,EAAiB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,IAA9B,EAAoCC,KAApC;AACH,KAjDkB;;AAAA,+DAmDR,YAAM;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,KArDkB;;AAEf,UAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE,CAACvB,OAAO,CAAC,MAAKI,KAAL,CAAWoB,cAAZ,CAAR,IAAuC,MAAKpB,KAAL,CAAWoB,cAAX,CAA0BlB,GAA1B,CAA8B,UAAAD,IAAI,EAAI;AACxF,YAAIA,IAAI,CAACG,MAAT,EAAiB;AACb,iBAAO;AACHC,YAAAA,KAAK,EAAEJ,IAAI,CAACK,IADT;AAEHC,YAAAA,GAAG,EAAEN,IAAI,CAACO;AAFP,WAAP;AAIH,SALD,MAKO;AACH,iBAAO;AACHH,YAAAA,KAAK,EAAEJ,IAAI,CAACK,IADT;AAEHC,YAAAA,GAAG,EAAEN,IAAI,CAACO,KAFP;AAGHC,YAAAA,QAAQ,EAAE,MAAKC,YAAL,CAAkBT,IAAI,CAACQ,QAAvB;AAHP,WAAP;AAKH;AACJ,OAbqD;AAD7C,KAAb;AAFe;AAkBlB;;;;6BAoCQ;AAAA;;AACL,0BACI;AAAK,QAAA,SAAS,EAAEd,MAAM,CAAC0B,KAAvB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAE1B,MAAM,CAAC2B,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAIG,QAAC,aAAD;AACK,UAAA,QAAQ,MADb;AAEK,UAAA,QAAQ,EAAE,KAAKC,UAFpB;AAGK,UAAA,QAAQ,EAAE;AAAA,mBAAM,MAAI,CAACC,QAAL,EAAN;AAAA,WAHf;AAIK,UAAA,QAAQ,EAAE;AAAA,mBAAM,MAAI,CAACC,QAAL,EAAN;AAAA,WAJf;AAKK,UAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWC;AAL1B;AAAA;AAAA;AAAA;AAAA,gBAJH;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAcH;;;;EAtEqCtB,KAAK,CAAC6B,S;;SAA3B3B,Y","sourcesContent":["import styles from '../../styles/articleTrees.module.scss';\nimport { Tree } from 'antd';\nimport { isEmpty } from 'zgl-utils-js';\nimport React from 'react';\n\n\nconst { DirectoryTree } = Tree;\n\nexport default class ArticleTrees extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            com_classList: !isEmpty(this.props.com_class_list) && this.props.com_class_list.map(item => {\n                if (item.isLeaf) {\n                    return {\n                        title: item.name,\n                        key: item.value\n                    }\n                } else {\n                    return {\n                        title: item.name,\n                        key: item.value,\n                        children: this.getItemChild(item.children)\n                    }\n                }\n            })\n        }\n    }\n    getItemChild = (item) => {\n        return item.map(child => {\n            if (child.isLeaf) {\n                return {\n                    title: child.name,\n                    key: child.value\n                }\n            } else {\n                return {\n                    title: child.name,\n                    key: child.value,\n                    children: this.getItemChild(child.children)\n                }\n            }\n        })\n    }\n    updateTreeData = (list, key, children) => {\n        return list.map((node) => {\n          if (node.key === key) {\n            return { ...node, children };\n          } else if (node.children) {\n            return { ...node, children: updateTreeData(node.children, key, children) };\n          }\n      \n          return node;\n        });\n    }\n      \n    onSelect = (keys, event) => {\n        console.log('Trigger Select', keys, event);\n    };\n    \n    onExpand = () => {\n        console.log('Trigger Expand');\n    };\n    render() {\n        return (\n            <div className={styles.trees}>\n                <div className={styles.visitorTitle}> \n                    分类列表 \n                </div>\n               <DirectoryTree\n                    multiple\n                    loadData={this.onLoadData}\n                    onSelect={() => this.onSelect()}\n                    onExpand={() => this.onExpand()}\n                    treeData={this.state.com_classList}\n                />\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}