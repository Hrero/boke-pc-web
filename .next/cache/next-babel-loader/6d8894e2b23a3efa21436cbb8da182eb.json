{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nvar initialState = {\n  count: 0\n};\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"add\":\n      return {\n        count: state.count + 1\n      };\n\n    case \"bdd\":\n      return {\n        count: state.count - 1\n      };\n      break;\n\n    default:\n      return state;\n  }\n} // 这里暴露出的是创建store的工厂方法\n// 每次渲染都需要重新创建一个store实例\n// 防止服务端一直复用旧实例 无法和客户端状态同步\n\n\nexport default function initializeStore() {\n  return createStore(reducer, initialState, applyMiddleware(ReduxThunk));\n}","map":{"version":3,"sources":["/Users/app/code/boke-pc-web/store/store.js"],"names":["createStore","applyMiddleware","ReduxThunk","initialState","count","reducer","state","action","type","initializeStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;;AAIA,SAASC,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACA,aAAO;AACHJ,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AADlB,OAAP;;AAGA,SAAK,KAAL;AACI,aAAO;AACHA,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AADlB,OAAP;AAGJ;;AACA;AACA,aAAOE,KAAP;AAXJ;AAaH,C,CAED;AACA;AACA;;;AACA,eAAe,SAASG,eAAT,GAA2B;AACtC,SAAOT,WAAW,CAACK,OAAD,EAAUF,YAAV,EAAwBF,eAAe,CAACC,UAAD,CAAvC,CAAlB;AACH","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\n\nconst initialState = {\n    count: 0\n};\n\nfunction reducer(state = initialState, action) {\n    switch (action.type) {\n        case \"add\":\n        return {\n            count: state.count + 1\n        };\n        case \"bdd\":\n            return {\n                count: state.count - 1\n            };\n        break;\n        default:\n        return state;\n    }\n}\n\n// 这里暴露出的是创建store的工厂方法\n// 每次渲染都需要重新创建一个store实例\n// 防止服务端一直复用旧实例 无法和客户端状态同步\nexport default function initializeStore() {\n    return createStore(reducer, initialState, applyMiddleware(ReduxThunk));\n}\n"]},"metadata":{},"sourceType":"module"}